config:
    target: "https://{example}.execute-api.eu-west-1.amazonaws.com/dev"
    phases:
      - duration: 20
        arrivalRate: 3
    processor: "createBicycleLicence.js"
    plugins:
      cloudwatch:
        namespace: "serverless-artillery-qldb-loadtest"
  
scenarios:
    - flow:
        # call createTestPerson() to create the govid, firstName, lastName, DOB, type and address variables
        - function: "createBicycleLicence"
        - post:
            url: "/licences/"
            json:
                firstName: "{{ firstName }}"
                lastName: "{{ lastName }}"
                email: "{{ email }}"
                street: "{{ street }}"
                county: "{{ county }}"
                postcode: "{{ postcode }}"
            capture:
                json: "$.licenceId"
                as: "licenceId"
        # Print the data we're sending while debugging the script:
        - log: "Sent a request to /qldb with {{ firstName }}, {{ lastName }}, {{ email }}, {{ street }}, {{ county }}, {{ postcode }}"
        # Now pause then use the extracted ID to add some penalty points
        - think: 30
        - function: "generateRandom"
        - put:
            url: "/licences/"
            ifTrue: "{{ random }} > 1"
            json:
                licenceId: "{{ licenceId }}"
                points: "{{$randomNumber(1,6)}}"
        # Now pause then use the extracted ID to add some more penalty points
        - think: 30
        - function: "generateRandom"
        - put:
            url: "/licences/"
            ifTrue: "{{ random }} > 1"
            json:
                licenceId: "{{ licenceId }}"
                points: "{{$randomNumber(1,6)}}"
        # Now pause then update the address
        - think: 30
        - function: "createNewAddress"
        - put:
            url: "/licences/contact/"
            ifTrue: "{{ random }} > 2"
            json:
                licenceId: "{{ licenceId }}"
                street: "{{ street }}"
                county: "{{ county }}"
                postcode: "{{ postcode }}"




